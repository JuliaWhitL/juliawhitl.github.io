---
title: "#TidyTuesday: James Beard Awards"
#description: "Looking at data in the Tidy Tuesday challenge for Dec 31, 2024"
author:
  - name: Julia Whitman
date: 12-31-2024
categories: [tidy] # self-defined categories
#image: preview-image.png
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!
fontsize: 0.8em
format: html
execute: 
  echo: false
  warning: false
  comment: false
---

```{r}
library(tidyverse)
library(Hmisc)
library(stringr)
library(qreport)
library(data.table)
library(ggplot2)
library(plotly)
library(lubridate)
library(generics)
```

```{r}
## load data from github
book <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-31/book.csv')
broadcast_media <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-31/broadcast_media.csv')
journalism <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-31/journalism.csv')
leadership <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-31/leadership.csv')
restaurant_and_chef <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-31/restaurant_and_chef.csv')
```

# What is it?

The [James Beard Awards](https://www.jamesbeard.org/awards) were established in 1990 to recognize leaders in the culinary and food media industries, and those in the broader food systems. Categories include Media (Book, Broadcast, and Journalism), Impact, and Restaurant & Chef awards.

Here is the code I used to explore some questions posed by the [#tidytuesday](https://github.com/rfordatascience/tidytuesday) team.

# Explore the data

How have the subcategories of the various awards changed over time? Let's start by looking at the winners and nominees for the James Beard **book awards**...

::: {#fig-1}
```{r}
# Create a "demo" dataset, counting the number of times a subcategory is listed by year
demo <- book %>% group_by(year, subcategory) %>% summarise(n = n())

# Plot categories over time
plot_ly(data = demo, x = ~year, y = ~n, color = ~subcategory, type = 'bar') %>%
  layout(barmode = 'stack', title = "Book Awards")
```
:::

Yikes! Too many categories makes this impossible to read. Let's group like-categories...

::: {#fig-2}
```{r}
# Take a look at all the subcategories in our dataset
#table(demo$subcategory, useNA = 'always') # no NAs

demo <- demo %>%
  mutate(subcat = case_when(grepl("americ|US foodways|U.S.", subcategory, ignore.case = TRUE) ~ "American", 
                            grepl("bak|dessert|bread", subcategory, ignore.case = TRUE) ~ "Baking & Desserts",
                            grepl("writing", subcategory, ignore.case = TRUE) ~ "Writing",
                            grepl("veg", subcategory, ignore.case = TRUE) ~ "Veggies",
                            #grepl("soft", subcategory, ignore.case = TRUE) ~ "Soft Cover",
                            grepl("ref|nonfiction", subcategory, ignore.case = TRUE) ~ "Reference",
                            grepl("wine|drink|spirit|beverage", subcategory, ignore.case = TRUE) ~ "Beverage",
                            grepl("basic|general|time|convenience|quick", subcategory, ignore.case = TRUE) ~ "Simple",
                            grepl("entertain", subcategory, ignore.case = TRUE) ~ "Entertainment",
                            grepl("health|special|organic|natural", subcategory, ignore.case = TRUE) ~ "Health",
                            grepl("foreign|international|asian|oriental|europ|italian|mediter", subcategory, ignore.case = TRUE) ~ "International",
                            grepl("first|emerging", subcategory, ignore.case = TRUE) ~ "Newcomer",
                            grepl("single", subcategory, ignore.case = TRUE) ~ "Single Subject",
                            grepl("photography|visuals", subcategory, ignore.case = TRUE) ~ "Photography",
                            grepl("meat", subcategory, ignore.case = TRUE) ~ "Fish & Game",
                            grepl("community|advocacy", subcategory, ignore.case = TRUE) ~ "Community Cookbooks",
                            grepl("year|fame", subcategory, ignore.case = TRUE) ~ "HoF & CoY Awards",
                            grepl("chefs|professional", subcategory, ignore.case = TRUE) ~ "Chefs & Restaurants",
                            grepl("techn|accent", subcategory, ignore.case = TRUE) ~ "Techniques"
                            ))

# Re-count the number of times a subcategory is listed by year using the newly-created "subcat" variable
demo <- demo %>% group_by(year, subcat) %>% summarise(n = n())

# What's going on in 2021?
a <- list(
  x = 2021,
  y = 13,
  text = 'COVID-19',
  #showarrow = TRUE,
  arrowhead = 2,
  arrowsize=1,
    arrowwidth=2,
    arrowcolor="black"
)

# Plot categories over time
plot_ly(data = demo, x = ~year, y = ~n, color = ~subcat, type = 'bar') %>%
  layout(barmode = 'stack', annotations = a, title = "Book Awards")

```
:::

Still a lot, but better. For a more simplified view, you can double-click on a category to isolate it and layer other categories by clicking them once. Double-click again to return to the original view, or hover your mouse to get more granular information about the plot.

We can see that the pool of nominees is more varied now than it was in the 1970s and 80s. Some categories - like "simple" books for home cooking and books for healthy eating - have maintained their popularity, while interest in technical and general "entertainment" cookbooks has petered out. We also see a gap in the data in 2021 due to the COVID-19 pandemic.

Now let's take a look at some of the other award categories. We can use the same process as above to combine similar groups and look at how the subcategories of these different awards have evolved over time.

::: panel-tabset
## Broadcase Media
::: {#fig-3}
```{r}
#table(broadcast_media$subcategory, useNA = 'always') # no NAs
demo2 <- broadcast_media %>% group_by(year, subcategory) %>% summarise(n = n())

demo2 <- demo2 %>%
  mutate(subcat = case_when(grepl("radio", subcategory, ignore.case = TRUE) ~ "Radio", 
                            grepl("online|webcast", subcategory, ignore.case = TRUE) ~ "Online",
                            grepl("personality", subcategory, ignore.case = TRUE) ~ "Personality/Host",
                            grepl("journalism|reporting", subcategory, ignore.case = TRUE) ~ "Food journalism & reporting",
                            grepl("cooking show|cooking series|cooking segment|food segment|food show|television program|television segment|television show", subcategory, ignore.case = TRUE) ~ "Cooking show or series",
                            grepl("cooking special|television special|food special|documentary|special", subcategory, ignore.case = TRUE) ~ "TV special or documentary",
                            grepl("podcast|audio program", subcategory, ignore.case = TRUE) ~ "Podcast or audio program",
                            grepl("culinary video", subcategory, ignore.case = TRUE) ~ "Culinary video",
                            grepl("excellence", subcategory, ignore.case = TRUE) ~ "Award of Excellence",
                            grepl("visual media", subcategory, ignore.case = TRUE) ~ "Visual media",
                            grepl("Emerging", subcategory, ignore.case = TRUE) ~ "Newcomer",
                            grepl("Social Media", subcategory, ignore.case = TRUE) ~ "Social media account",
                            grepl("Commercial Media", subcategory, ignore.case = TRUE) ~ "Commercial Media"
                            ))

# Re-count the number of times a subcategory is listed by year using the newly-created "subcat" variable
demo2 <- demo2 %>% group_by(year, subcat) %>% summarise(n = n())

# What's going on in 2021?
a <- list(
  x = 2021,
  y = 10,
  text = 'COVID-19',
  #showarrow = TRUE,
  arrowhead = 2,
  arrowsize=1,
    arrowwidth=2,
    arrowcolor="black"
)

# Plot categories over time
plot_ly(data = demo2, x = ~year, y = ~n, color = ~subcat, type = 'bar') %>%
  layout(barmode = 'stack', annotations = a, title = "Broadcast Media Awards")
```
:::

## Food Journalism
::: {#fig-4}
```{r}
#table(journalism$subcategory, useNA = 'always') # no NAs
demo3 <- journalism %>% group_by(year, subcategory) %>% summarise(n = n())

demo3 <- demo3 %>%
  mutate(subcat = case_when(grepl("politics|local|foodways", subcategory, ignore.case = TRUE) ~ "Politics & anthropology", 
                            grepl("Reporting", subcategory, ignore.case = TRUE) ~ "Reporting",
                            grepl("Magazine Series|newspaper series|section|column", subcategory, ignore.case = TRUE) ~ "Print series or column",
                            grepl("Review|critique", subcategory, ignore.case = TRUE) ~ "Review",
                            grepl("Magazine Feature|newspaper feature|Newspaper Writing|Magazine Writing|Feature", subcategory, ignore.case = TRUE) ~ "Print feature",
                            grepl("M.F.K. Fisher|MFK Fisher", subcategory, ignore.case = TRUE) ~ "M.F.K. Fisher Award",
                            grepl("Jonathan Gold", subcategory, ignore.case = TRUE) ~ "Jonathan Gold Award",
                            grepl("profile", subcategory, ignore.case = TRUE) ~ "Profile",
                            grepl("Storytelling|personal|literary writing", subcategory, ignore.case = TRUE) ~ "Storytelling, personal, or literary writing",
                            grepl("Travel|culture", subcategory, ignore.case = TRUE) ~ "Dining & travel",
                            grepl("website|blog|internet", subcategory, ignore.case = TRUE) ~ "Website or blog",
                            grepl("craig", subcategory, ignore.case = TRUE) ~ "Craig Claiborne Award",
                            grepl("home|health", subcategory, ignore.case = TRUE) ~ "Home cooking & health",
                            grepl("Emerging Voice Award", subcategory, ignore.case = TRUE) ~ "Emerging Voice Award",
                            grepl("Beverage|Sprits", subcategory, ignore.case = TRUE) ~ "Beverage",
                            grepl("Publication of the Year Award", subcategory, ignore.case = TRUE) ~ "Publication of the Year Award",
                            grepl("General Interest|general-interest", subcategory, ignore.case = TRUE) ~ "General Interest Publication",
                            grepl("humor", subcategory, ignore.case = TRUE) ~ "Humor",
                            grepl("multimedia|multi-media", subcategory, ignore.case = TRUE) ~ "Multimedia",
                            grepl("Instruction", subcategory, ignore.case = TRUE) ~ "Instruction"

                            ))

# Re-count the number of times a subcategory is listed by year using the newly-created "subcat" variable
demo3 <- demo3 %>% group_by(year, subcat) %>% summarise(n = n())

# What's going on in 2021?
a <- list(
  x = 2021,
  y = 10,
  text = 'COVID-19',
  arrowhead = 2,
  arrowsize=1,
    arrowwidth=2,
    arrowcolor="black"
)

# Plot categories over time
plot_ly(data = demo3, x = ~year, y = ~n, color = ~subcat, type = 'bar') %>%
  layout(barmode = 'stack', annotations = a, title = "Journalism Awards")
```
:::

## Restaurants & Chefs
::: {#fig-5}
```{r}
#table(restaurant_and_chef$subcategory, useNA = 'always') # no NAs
demo4 <- restaurant_and_chef %>% group_by(year, subcategory) %>% summarise(n = n())

demo4 <- demo4 %>%
  mutate(subcat = case_when(grepl("service|Hospitality", subcategory, ignore.case = TRUE) ~ "Service & hospitality", 
                            grepl("design|graphics", subcategory, ignore.case = TRUE) ~ "Design & graphics",
                            grepl("Who's Who", subcategory, ignore.case = TRUE) ~ "Who's Who",
                            grepl("humanitarian", subcategory, ignore.case = TRUE) ~ "Humanitarian",
                            grepl("lifetime", subcategory, ignore.case = TRUE) ~ "Lifetime achievement",
                            grepl("outstanding chef|best chef", subcategory, ignore.case = TRUE) ~ "Best & outstanding chefs",
                            grepl("outstanding pastry chef|outstanding baker", subcategory, ignore.case = TRUE) ~ "Pastry chefs & bakers",
                            grepl("best new restaurant|rising star|Emerging", subcategory, ignore.case = TRUE) ~ "Rising stars: chefs & restaurants",
                            grepl("America's Classics", subcategory, ignore.case = TRUE) ~ "America's classics",
                            grepl("Outstanding Restaurant|Restaurateur", subcategory, ignore.case = TRUE) ~ "Outstanding restaurant or restaurateur",
                            grepl("Outstanding Wine & Spirits Professional|Beer Professional|outstanding bar|Wine Program|bar program|Beverages Program|Beer Producer", subcategory, ignore.case = TRUE) ~ "Beverage programs & professionals"
                            ))

# Re-count the number of times a subcategory is listed by year using the newly-created "subcat" variable
demo4 <- demo4 %>% group_by(year, subcat) %>% summarise(n = n())

# What's going on in 2021?
a <- list(
  x = 2021,
  y = 10,
  text = 'COVID-19',
  arrowhead = 2,
  arrowsize=1,
    arrowwidth=2,
    arrowcolor="black"
)

# Plot categories over time
plot_ly(data = demo4, x = ~year, y = ~n, color = ~subcat, type = 'bar') %>%
  layout(barmode = 'stack', annotations = a, title = "Restaurant & Chef Awards")
```
:::

:::

Has anybody won in multiple categories? We can use the "generics" package to find names common to two datasets or vectors...
```{r}
generics::intersect(book$name, broadcast_media$name)
generics::intersect(broadcast_media$name, journalism$name)
generics::intersect(journalism$name, restaurant_and_chef$name)
```
It looks like there is quite a bit of overlap between the award categories! Let's see how we can visualize these overlaps using a heatmap...

```{r, eval=FALSE}
# take a look at the datasets (including missingness)
describe(book) 
describe(broadcast_media) 
describe(journalism) 
describe(leadership) 
describe(restaurant_and_chef) # some missing values for "name" will be removed
```
We can start by subsetting the data with variables we want to compare. Then, we'll create indicator variables for each category before merging the five dataframes together.
```{r}
book$award <- "book"
broadcast_media$award <- "broadcast"
journalism$award <- "journalism"
leadership$award <- "leadership"
restaurant_and_chef$award <- "chef"

d_book <- book %>%
  select(rank, year, name, award)


#put all data frames into list
df_list <- list(book, broadcast_media, journalism, leadership, restaurant_and_chef)

df_list %>% reduce(full_join, by='name')
```


Which restaurants have the most winners?

```{r, eval=FALSE}
restaurant_and_chef %>% group_by(restaurant) %>% summarise(n = n()) %>%
   arrange(desc(n))
```

How about newspapers and networks?

```{r}

```
